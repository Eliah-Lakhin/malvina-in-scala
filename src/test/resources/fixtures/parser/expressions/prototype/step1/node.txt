 > create:
expression statement:87
...14

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) {return x + y;};

    x >> #{
        <<<y++;>>>
        return y;
    };

    [1, 2, 3].map(#x => x + 10);
}


 > create:
application:88
...14

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) {return x + y;};

    x >> #{
        <<<y++>>>;
        return y;
    };

    [1, 2, 3].map(#x => x + 10);
}


 > create:
application:89
...14

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) {return x + y;};

    x >> #{
        <<<y>>>++;
        return y;
    };

    [1, 2, 3].map(#x => x + 10);
}


 > merge:
block 71 cachable >> 70 {
  statement: expression statement 87 >> 71 {
    expression: application 88 >> 87 {
      name: next
      argument: application 89 >> 88 {
        name: y
      }
    }
  }
  statement: return 72 >> 71 {
    value: application 73 >> 72 {
      name: y
    }
  }
}

