 > create:
...11
    r++;

    s.t(u, v);

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) <<<{return x + y;}>>>;

    x >> #{
        return y;
    };

    [1, 2, 3].map(#x => x + 10);
}


 > create:
...13
    s.t(u, v);

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) {return x + y;};

    x >> #<<<{
        return y;
    }>>>;

    [1, 2, 3].map(#x => x + 10);
}


 > create:
function test() <<<{
    a + b * c;

    (d + e) * f;

    g - h.i.j[k, l];

    m = n;

    o.p = q;

    r++;

    s.t(u, v);

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) {return x + y;};

    x >> #{
        return y;
    };

    [1, 2, 3].map(#x => x + 10);
}>>>


 > invalidate:
<<<function test() {
    a + b * c;

    (d + e) * f;

    g - h.i.j[k, l];

    m = n;

    o.p = q;

    r++;

    s.t(u, v);

    w.x() = y;

    w.x[] = y;

    #x, y => x + y;

    #(x: Integer, y: Float => String) {return x + y;};

    x >> #{
        return y;
    };

    [1, 2, 3].map(#x => x + 10);
}
>>>

