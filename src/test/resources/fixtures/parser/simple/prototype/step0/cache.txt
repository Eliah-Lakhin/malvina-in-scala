 > invalidate:
Node 1. Fragment:
<<<export type Hashtable<A, B>(hash: Function1<A, Integer>) {
    this.elements: Array<Tuple2<A, B>> = emptyArray();
    this.hash: Function1<A, Integer> = hash;
}

export function contains(this: Hashtable<A, B>, element: A): Boolean {
    return false;
}
>>>

 > create:
Node 36. Fragment:
export type Hashtable<A, B>(hash: Function1<A, Integer>) {
    this.elements: Array<Tuple2<A, B>> = emptyArray();
    this.hash: Function1<A, Integer> = hash;
}

export function contains(this: Hashtable<A, B>, element: A): Boolean <<<{
    return false;
}>>>


 > create:
Node 11. Fragment:
export type Hashtable<A, B>(hash: Function1<A, Integer>) <<<{
    this.elements: Array<Tuple2<A, B>> = emptyArray();
    this.hash: Function1<A, Integer> = hash;
}>>>

export function contains(this: Hashtable<A, B>, element: A): Boolean {
    return false;
}


